name: AWS Deployment

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Tag Docker images
        run: |
          # Get the image ID from the built image
          IMAGE_ID=$(docker compose build app --quiet)
          
          # Tag the image
          docker tag $IMAGE_ID ${{ secrets.AWS_ECR_REPO_URI }}:latest
          docker tag $IMAGE_ID ${{ secrets.AWS_ECR_REPO_URI }}:${{ github.sha }}
          
          # Push to ECR
          docker push ${{ secrets.AWS_ECR_REPO_URI }}:latest
          docker push ${{ secrets.AWS_ECR_REPO_URI }}:${{ github.sha }}

      - name: Build Docker images
        run: |
          docker compose build
          docker tag app:latest ${{ secrets.AWS_ECR_REPO_URI }}:latest
          docker tag app:latest ${{ secrets.AWS_ECR_REPO_URI }}:${{ github.sha }}
          docker push ${{ secrets.AWS_ECR_REPO_URI }}:latest
          docker push ${{ secrets.AWS_ECR_REPO_URI }}:${{ github.sha }}

      - name: Deploy to AWS ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ secrets.AWS_ECS_TASK_DEFINITION }}
          service: ${{ secrets.AWS_ECS_SERVICE }}
          cluster: ${{ secrets.AWS_ECS_CLUSTER }}
          wait-for-service-stability: true
          wait-for-minutes: 15
